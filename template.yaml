Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: python3.8
    MemorySize: !Ref EnvConfiglambdamemorysizeAsString
    Timeout: !Ref EnvConfiglambdatimeoutAsString
    CodeUri: src
    Tracing: Active
    Environment:
      Variables:
        SECRETS_NAMESPACE: !Sub /${EnvironmentTagName}/

Resources:
  ClearProcessedNotifications:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ClearProcessedNotifications
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: ClearProcessedNotifications
      Handler: notification_process.clear_notification_queue
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSLambdaENIManagementAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - DynamoDBCrudPolicy:
            TableName: !Ref notifications
      Environment:
        Variables:
          TABLE_NAME: !Ref notifications
          TABLE_ARN: !GetAtt notifications.Arn
      Events:
        Timer4:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)

  CustomEmail:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-CustomEmail
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: CustomEmail
      Handler: custom_email.custom_email
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
      Events:
        EventRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - custom_email
            EventBusName: !Ref EnvConfigeventbridgethiscoveryeventbusAsString
          Metadata:
            StackeryName: CustomEmail

  processnotifications:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-processnotifications
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: process-notifications
      Handler: notification_process.process_notifications
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSLambdaENIManagementAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref notifications
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - DynamoDBCrudPolicy:
            TableName: !Ref tokens
        - DynamoDBCrudPolicy:
            TableName: !Ref lookups
        - DynamoDBCrudPolicy:
            TableName: !Ref HubspotEmailTemplates
      Events:
        Timer9:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
          Metadata:
            StackeryName: timer-process-notifications
      Environment:
        Variables:
          TABLE_NAME: !Ref notifications
          TABLE_ARN: !GetAtt notifications.Arn
          TABLE_NAME_2: !Ref tokens
          TABLE_ARN_2: !GetAtt tokens.Arn
          TABLE_NAME_3: !Ref lookups
          TABLE_ARN_3: !GetAtt lookups.Arn
          TABLE_NAME_4: !Ref HubspotEmailTemplates
          TABLE_ARN_4: !GetAtt HubspotEmailTemplates.Arn
    Metadata:
      StackeryName: process-notifications

  RecordTaskSignup:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-RecordTaskSignup
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: RecordTaskSignup
      Handler: task_signup.record_task_signup_event
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - DynamoDBCrudPolicy:
            TableName: !Ref notifications
      Environment:
        Variables:
          TABLE_NAME: !Ref notifications
          TABLE_ARN: !GetAtt notifications.Arn
      Events:
        EventRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - task_signup
            EventBusName: !Ref EnvConfigeventbridgethiscoveryeventbusAsString

  RecordUserLogin:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-RecordUserLogin
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: RecordUserLogin
      Handler: user_login.record_user_login_event
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - DynamoDBCrudPolicy:
            TableName: !Ref notifications
      Environment:
        Variables:
          TABLE_NAME: !Ref notifications
          TABLE_ARN: !GetAtt notifications.Arn
      Events:
        EventRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - Auth0 log
              detail:
                data:
                  type:
                    - s
            EventBusName: !Ref EnvConfigeventbridgeauth0eventbusAsString
          Metadata:
            StackeryName: RecordUserLogin

  RecordUserRegistration:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-RecordUserRegistration
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: RecordUserRegistration
      Handler: user_registration.record_user_registration_event
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - DynamoDBCrudPolicy:
            TableName: !Ref notifications
      Environment:
        Variables:
          TABLE_NAME: !Ref notifications
          TABLE_ARN: !GetAtt notifications.Arn
      Events:
        EventRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - Auth0 log
              detail:
                data:
                  type:
                    - ss
            EventBusName: !Ref EnvConfigeventbridgeauth0eventbusAsString
          Metadata:
            StackeryName: RecordUserRegistration

  SendTransactionalEmail:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-SendTransactionalEmail
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: SendTransactionalEmail
      Handler: transactional_email.send_transactional_email
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - DynamoDBCrudPolicy:
            TableName: !Ref HubspotEmailTemplates
        - DynamoDBCrudPolicy:
            TableName: !Ref tokens
        - DynamoDBCrudPolicy:
            TableName: !Ref notifications
        - DynamoDBCrudPolicy:
            TableName: !Ref lookups
      Events:
        EventRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - transactional_email
            EventBusName: !Ref EnvConfigeventbridgethiscoveryeventbusAsString
      Environment:
        Variables:
          TABLE_NAME: !Ref HubspotEmailTemplates
          TABLE_ARN: !GetAtt HubspotEmailTemplates.Arn
          TABLE_NAME_2: !Ref tokens
          TABLE_ARN_2: !GetAtt tokens.Arn
          TABLE_NAME_3: !Ref notifications
          TABLE_ARN_3: !GetAtt notifications.Arn
          TABLE_NAME_4: !Ref lookups
          TABLE_ARN_4: !GetAtt lookups.Arn


  HubspotEmailTemplates:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: !Ref EnvConfigpddbpointintimerecoveryAsString
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-HubspotEmailTemplates

  lookups:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-lookups
    Metadata:
      StackeryName: Lookups

  notifications:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: processing_status
          AttributeType: S
        - AttributeName: created
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-notifications
      GlobalSecondaryIndexes:
        - IndexName: processing-status-index
          KeySchema:
            - AttributeName: processing_status
              KeyType: HASH
            - AttributeName: created
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
    Metadata:
      StackeryName: Notifications

  tokens:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-tokens
    Metadata:
      StackeryName: Tokens

Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvConfigpddbpointintimerecoveryAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/ddb/point-in-time-recovery
  EnvConfiglambdamemorysizeAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/lambda/memory-size
  EnvConfiglambdatimeoutAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/lambda/timeout
  EnvConfigeventbridgeauth0eventbusAsString:
      Type: AWS::SSM::Parameter::Value<String>
      Default: /<EnvironmentName>/eventbridge/auth0-event-bus
  EnvConfigeventbridgethiscoveryeventbusAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/eventbridge/thiscovery-event-bus


Metadata:
  EnvConfigParameters:
    EnvConfiglambdamemorysizeAsString: lambda.memory-size
    EnvConfiglambdatimeoutAsString: lambda.timeout
    EnvConfigeventbridgethiscoveryeventbusAsString: eventbridge.thiscovery-event-bus