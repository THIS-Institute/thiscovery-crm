name: Feature pipeline

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - '4534-*'


env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EPSAGON_TOKEN: ${{ secrets.EPSAGON_TOKEN }}
  SAM_TEMPLATE: template.yaml
  AWS_REGION: eu-west-1
  STACK_NAME: thiscovery-crm

jobs:
  test:
    name: Test on AWS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/configure-test-env
        with:
          afs25_account: ${{ secrets.AFS25_AWS_ACCOUNT }}
          sem86_account: ${{ secrets.SEM86_AWS_ACCOUNT }}
          amp205_account: ${{ secrets.AMP205_AWS_ACCOUNT }}

      - uses: ./.github/actions/build-stack

      # Packaging
      - name: Upload artifacts to testing artifact bucket
        run: |
          sam package \
            --debug \
            --s3-bucket ${ARTIFACTS_BUCKET} \
            --region ${AWS_REGION} \
            --output-template-file ${{ env.PACKAGED_TEMPLATE }}

      # This step is not really necessary because we are deploying using the same runner, but let's leave it here for debugging
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGED_TEMPLATE }}
          path: ${{ env.PACKAGED_TEMPLATE }}

      - name: Execute thiscovery deployment script
        run: |
          python actions_deploy.py

      # Assume the testing role
      - name: Assume the testing role in testing account
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
            role-to-assume: ${{ env.TESTING_ACCOUNT_TEST_ROLE }}
            role-session-name: feature-testing
            role-duration-seconds: 3600
            role-skip-session-tagging: true

      # Add src to PYTHONPATH to resolve imports
      - name: Set pythonpath
        run: |
          echo "PYTHONPATH=./src" >> $GITHUB_ENV

      # Run unit tests.
      - name: Run unit tests
        run: |
          python -m unittest discover -s ./tests/unit_tests -t ./tests/unit_tests
